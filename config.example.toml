[logging]
# Console logging configuration.
# log level: debug, info, warning, error, critical
level='info'
# Python log message format
# https://docs.python.org/3/library/logging.html#logrecord-attributes
format='%(levelname)s: %(message)s'

[paths]
# Raw .hex file directory to process.
raw = 'C:\Users\<USER>\data\CTD\raw'
# temporary processing directory.
processing = 'C:\Users\<USER>\data\CTD\processing'
# final destination where approved are moved to.
approved = 'C:\Users\<USER>\data\CTD\processed'
# Location where you installed SBE Data Processing
SBEDataProcessing = 'C:\Program Files (x86)\Sea-Bird\SBEDataProcessing-Win32'

# Path to the psa config directory. config in this project is used by default.
# ctd_config = ''

[audit_log]
# path to audit log file. will be created if it does not exist
file = 'sbe_ctd_auditlog2.csv'
# true to update hex file's row after each processing step and approve.
# false will always append a new row to the audit log for these actions.
update_rows = true

[options]
# how to lookup a file's latitude: 'ask', 'spreadsheet', 'database', 'constant'
latitude_method = 'ask'
# for spreadsheet, specify path to .xlsx file
#latitude_spreadsheet_file = 'latitudes.xlsx'

# For latitude_method='constant', only for development purposes to quickly process many files.
#constant_latitude = -19

[database]
enabled = false
mdb_file = 'C:\Users\<USER>\pathto\OceanDBMMP.mdb'
mdw_file = 'C:\Users\<USER>\pathto\OceanDBMMPSecurity.mdw'
user = 'readonly'
password = 'readonly'

[livewire_mapping]
# Livewire ctds have different temperature IDs - Adjust them here
# this is equivalent to:
# if ctd_id == '5165':
#     ctd_id = '1233'
5165 = "1233"
4851 = "0890"
5530 = "0890"

[sensor_map]
# map sensor ids (list of string values) to a standard name, which can be
# used in [chart_axis] and [chart] default_sensors
temp = ['tv290C', 't090C']
cond = ['c0S/m']
sal = ['sal00']

[chart]
# default sensors (aka measurements) to plot.
# values can be sensor ids or names defined in sensor_map
default_sensors = ['temp', 'cond']

[chart_axis]
# Axis min/max for different sensors
# name can be sensor id or name defined in sensor_map
temp = [20, 35]
cond = [5.0, 6.0]
sal = [34, 35]
